#!/usr/bin/env ruby

require 'generic_web_hook'

module GenericWebHook
  class Script

    include EasyAppHelper

    def initialize
      config.describes_application app_name: GenericWebHook::NAME,
                                   app_version: GenericWebHook::VERSION,
                                   app_description: GenericWebHook::DESCRIPTION
      add_script_options
    end

    def run
      # logging startup configuration
      logger.debug "Config layers ->\n#{config.detailed_layers_info}"
      logger.debug "Merged config -> #{config[].to_yaml}"
      # Displaying (and exiting) command line help
      if config[:help]
        puts config.command_line_help
        exit 0
      end
      check_options
      logger.info 'Application is starting...'
      do_process
    rescue => e
      puts "Program aborted with message: '#{e.message}'."
      if config[:debug]
        logger.fatal "#{e.message}\nBacktrace:\n#{e.backtrace.join("\n\t")}"
      else
        puts '  Use --debug option for more detail (see --help).'
      end
    end

    private

    def add_script_options
      config.add_command_line_section do |slop|
        slop.on :p, :port, "Specify port to bind to. Default #{config.gem_layer[:port]}.", argument: true, as: Integer
        slop.on :b, :bind, "Specify address to bind to. Default #{config.gem_layer[:bind]}.", argument: true, as: String
      end
    end

    def do_process
      GenericWebHook.start_server
    end

    def check_options
      # Your code here
      logger.warn 'Default bind for server kept !' if config.gem_layer[:bind] == config[:bind]
    end

  end
end

GenericWebHook::Script.new.run